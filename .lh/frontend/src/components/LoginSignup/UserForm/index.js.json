{
    "sourceFile": "frontend/src/components/LoginSignup/UserForm/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1753423552066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753953989704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   const [dialogConfig, setDialogConfig] = useState({\n     isOpen: false,\n     type: null,\n   });\n-  const router = useRouter();\n+  // const router = useRouter(); // Removed unused variable\n \n   return (\n     <form\n       onSubmit={handleSubmit(onSubmit)}\n"
                },
                {
                    "date": 1753954055169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import useForgotPassword from '../hooks/useForgotPassword';\n import CustomDialog from '../TermsPrivacy';\n import useTermsPrivacy from '../TermsPrivacy/hooks/useTermsPrivacy';\n import { useState } from 'react';\n-import { useRouter } from 'next/navigation';\n+// import { useRouter } from 'next/navigation'; // Removed unused import\n // import { googlei } from '@/assets/png';\n // import googleIcon from '@/assets/svg/google.svg'; // Adjust path to your Google icon\n \n const UserForm = ({\n"
                }
            ],
            "date": 1753423552066,
            "name": "Commit-0",
            "content": "'use client';\nimport { eye, eyeOff } from '@/assets/svg';\nimport { ELEMENT } from '@/common/form-control';\nimport { Button } from '@/components/ui/button';\nimport Image from 'next/image';\nimport { Controller } from 'react-hook-form';\nimport useUserAuth from '../hooks/useUserAuth';\nimport useForgotPassword from '../hooks/useForgotPassword';\nimport CustomDialog from '../TermsPrivacy';\nimport useTermsPrivacy from '../TermsPrivacy/hooks/useTermsPrivacy';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\n// import { googlei } from '@/assets/png';\n// import googleIcon from '@/assets/svg/google.svg'; // Adjust path to your Google icon\n\nconst UserForm = ({\n  controls,\n  isSignUp = false,\n  setOpen,\n  setIsForgotPassword,\n  isForgotPassword = false,\n  setToastState,\n}) => {\n  const authHook = useUserAuth({ setOpen, isSignUp, setToastState });\n  const forgotPasswordHook = useForgotPassword({\n    setIsForgotPassword,\n    setToastState,\n  });\n\n  const {\n    control,\n    handleSubmit,\n    onSubmit,\n    loading = false,\n    showPassword = false,\n    togglePasswordVisibility = () => {},\n  } = isForgotPassword ? forgotPasswordHook : authHook;\n\n  const {\n    termsData,\n    privacyData,\n    fetchTerms,\n    fetchPrivacyPolicy,\n    termsPrivacyLoading,\n  } = useTermsPrivacy();\n  const [dialogConfig, setDialogConfig] = useState({\n    isOpen: false,\n    type: null,\n  });\n  const router = useRouter();\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\" flex flex-col justify-between flex-grow\"\n    >\n      {controls?.map((item) => {\n        const Component = ELEMENT[item.type];\n        const isCheckbox = item.type === 'checkbox';\n        const isPassword = item.name === 'password';\n\n        const { pattern, required } = item || {};\n\n        return (\n          <Controller\n            key={item.name}\n            control={control}\n            name={item.name}\n            rules={{ pattern, required }}\n            render={({ field, fieldState }) => {\n              const error = fieldState?.error;\n              return (\n                <div className=\"text-left flex flex-col\">\n                  {!isCheckbox && (\n                    <label className=\"text-blue-100 tw-font-bold\">\n                      {item.label}\n                    </label>\n                  )}\n                  <div className=\"items-center space-x-2 mt-2 relative\">\n                    <div\n                      className={`${\n                        error ? 'border-red-500' : 'border-gray-300'\n                      } transition-colors duration-200`}\n                    >\n                      {isPassword ? (\n                        <div className=\"relative w-full\">\n                          <Component\n                            type={showPassword ? 'text' : 'password'}\n                            placeholder={item.placeholder}\n                            {...field}\n                            className={`w-full ${error && 'border-red-500'} focus:bg-transparent`}\n                          />\n                          <div\n                            onClick={togglePasswordVisibility}\n                            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 cursor-pointer\"\n                          >\n                            {showPassword ? (\n                              <Image src={eyeOff} alt=\"eye-off\" />\n                            ) : (\n                              <Image src={eye} alt=\"eye\" />\n                            )}\n                          </div>\n                        </div>\n                      ) : isCheckbox ? (\n                        <div className=\"!w-full flex flex-row gap-2\">\n                          <Component\n                            placeholder={item.placeholder}\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                            {...field}\n                            className={`mt-0.5 ${error && 'border-red-500'}`}\n                          />\n                          {/* <label className=\"font-size-6 sm:font-size-10 text-xs sm:text-sm text-blue-300 leading-4\">\n                            {item.label}\n                          </label> */}\n                          <label className=\"font-size-6 sm:font-size-10 text-xs sm:text-sm text-blue-300 leading-4\">\n                            {item.isLink ? (\n                          <>\n                            <span>I accept the </span>\n                            {item.label.includes('Terms of Use') && (\n                              <span\n                                className=\"cursor-pointer underline text-blue-500\"\n                                onClick={() => {\n                                  setDialogConfig({\n                                    isOpen: true,\n                                    type: 'terms',\n                                  });\n                                  fetchTerms();\n                                }}\n                              >\n                                Terms of Use\n                              </span>\n                            )}\n                            {item.label.includes('Terms of Use') &&\n                              item.label.includes('Privacy Policy') &&\n                              ' and '}\n                            {item.label.includes('Privacy Policy') && (\n                              <span\n                                className=\"cursor-pointer underline text-blue-500\"\n                                onClick={() => {\n                                  setDialogConfig({\n                                    isOpen: true,\n                                    type: 'privacy',\n                                  });\n                                  fetchPrivacyPolicy();\n                                }}\n                              >\n                                Privacy Policy\n                              </span>\n                            )}\n                          </>\n                        ) : (\n                          item.label\n                        )}\n                          </label>\n                        </div>\n                      ) : (\n                        <Component\n                          placeholder={item.placeholder}\n                          {...field}\n                          className={`${error && 'border-red-500'}`}\n                        />\n                      )}\n                    </div>\n                  </div>\n                  {error && (\n                    <div\n                      className={`text-red-500 mt-0.5 text-xs sm:text-sm transition-opacity duration-300 ease-in-out ${\n                        error\n                          ? 'opacity-100 translate-y-0'\n                          : 'opacity-0 translate-y-2'\n                      }`}\n                    >\n                      {error?.message}\n                    </div>\n                  )}\n                </div>\n              );\n            }}\n          />\n        );\n      })}\n\n      {!isSignUp && !isForgotPassword && (\n        <div className=\"text-left mt-2\">\n          <span\n            className=\"text-blue-400 text-sm cursor-pointer inline-block\"\n            onClick={() => setIsForgotPassword(true)}\n          >\n            Forgot Password?\n          </span>\n        </div>\n      )}\n\n      {isForgotPassword ? (\n        <div className=\"flex justify-between gap-4 mt-auto\">\n          <Button\n            type=\"button\"\n            className=\"w-[50%] border bg-transparent text-white\"\n            onClick={() => setIsForgotPassword(false)}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            className=\"w-[50%] bg-green-500 text-white rounded hover:bg-green-600\"\n            loading={loading}\n            disabled={loading}\n          >\n            Reset Password\n          </Button>\n        </div>\n      ) : (\n        <>\n          <Button\n            type=\"submit\"\n            className=\"w-full bg-green-500 py-2 !mt-10 text-white rounded hover:bg-green-600\"\n            loading={loading}\n            disabled={loading}\n          >\n            {isSignUp ? 'Sign Up' : 'Sign In'}\n          </Button>\n\n          {/* Google Sign-In Button */}\n          <Button\n            type=\"button\"\n            className=\"w-full border border-gray-300 bg-white text-black flex items-center justify-center gap-1 mt-4 hover:bg-gray-100\"\n            onClick={() => {\n              window.location.href = process.env.NEXT_PUBLIC_BACKEND_URL + '/api/v1/auth/sso/google';\n            }}\n          >\n            <span>Sign in with Google</span>\n          </Button>\n\n          {/* Facebook Sign-In Button */}\n          <Button\n            type=\"button\"\n            className=\"w-full border border-blue-600 bg-white text-black flex items-center justify-center gap-1 mt-2 hover:bg-blue-50\"\n            onClick={() => {\n              window.location.href = process.env.NEXT_PUBLIC_BACKEND_URL + '/api/v1/auth/sso/facebook';\n            }}\n          >\n            <span>Sign in with Facebook</span>\n          </Button>\n        </>\n      )}\n\n      <CustomDialog\n        isOpen={dialogConfig.isOpen}\n        onClose={() => setDialogConfig({ isOpen: false, type: null })}\n        type={dialogConfig.type}\n        loading={termsPrivacyLoading}\n        data={dialogConfig.type === 'terms' ? termsData : privacyData}\n      />\n    </form>\n  );\n};\n\nexport default UserForm;\n"
        }
    ]
}